name: Infrastructure Deployment

on:
  workflow_call:
    secrets:
      AWS_ROLE_ARN:
        required: true
      AWS_REGION:
        required: true
    inputs:
      terraform_version:
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ inputs.terraform_version }}

    - name: Terraform Init
      run: terraform init
      
    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Plan
      run: terraform plan -input=false -out=tfplan
      
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
      run: terraform apply -auto-approve tfplan

    - name: Terraform Output
      if: success()
      run: |
        echo "Capturing Terraform outputs..."
        terraform output -json > terraform-output.json

    # Upload Terraform Output
    - name: Upload Terraform Output
      if: success()
      uses: actions/upload-artifact@v4  # Updated to v4
      with:
        name: terraform-output
        path: terraform/terraform-output.json
        retention-days: 5

    # Cleanup
    - name: Cleanup
      if: always()
      run: |
        rm -f terraform-output.json
        rm -f tfplan
        rm -rf .terraform
