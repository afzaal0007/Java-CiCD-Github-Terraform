name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: myapp
  EKS_CLUSTER_NAME: my-cluster
  TERRAFORM_VERSION: 1.5.0

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.build.outputs.image_tag }}
    steps:
      - uses: actions/checkout@v4
      - name: Build and Push
        id: build
        uses: ./.github/workflows/build-push.yml
        with:
          aws_role_arn: ${{ secrets.AWS_ROLE_ARN }}
          aws_region: ${{ env.AWS_REGION }}
          ecr_repository: ${{ env.ECR_REPOSITORY }}

  deploy-infrastructure:
    name: Deploy Infrastructure
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Deploy Infrastructure
        uses: ./.github/workflows/infra-deploy.yml
        with:
          aws_role_arn: ${{ secrets.AWS_ROLE_ARN }}
          aws_region: ${{ env.AWS_REGION }}
          terraform_version: ${{ env.TERRAFORM_VERSION }}

  deploy-application:
    name: Deploy Application
    needs: [build-and-push, deploy-infrastructure]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Deploy Application
        uses: ./.github/workflows/deploy.yml
        with:
          aws_role_arn: ${{ secrets.AWS_ROLE_ARN }}
          aws_region: ${{ env.AWS_REGION }}
          eks_cluster_name: ${{ env.EKS_CLUSTER_NAME }}
          ecr_repository: ${{ env.ECR_REPOSITORY }}
          image_tag: ${{ needs.build-and-push.outputs.image_tag }} 